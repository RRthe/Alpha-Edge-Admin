<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Admin Dashboard</title>
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="/css/style.css">

<style>
.new-user-form-container {
  max-width: 600px;
  margin: auto;
  padding: 1rem;
  background: #f9f9f9;
  border-radius: 18px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.new-user-form h2 {
  text-align: center;
  margin-bottom: 1.5rem;
}

.form-row {
  display: flex;
  margin-bottom: 1rem;
  align-items: center;
}

.form-row label {
  width: 20%;
  min-width: 100px;
  margin-right: 0.5rem;
}

.form-row input {
  width: 80%;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.form-actions {
  text-align: right;
}

.btn {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 15px;
  cursor: pointer;
}

.btn-save {
  background-color: #4CAF50; /* Green */
  color: white;
}

.btn-cancel {
  background-color: #f44336; /* Red */
  color: white;
  margin-left: 0.5rem;
}

.btn:hover {
  opacity: 0.9;
}


  /* Additional styles can be added here as needed */
</style>
</head>
<body>
<div class="dashboard-wrapper d-flex" id="wrapper">
  <%- include('partials/sidebar') %> 

  
  <main class="p-4 w-100">
    <head>
      <title>Create User Dashboard</title>
      <!-- Link to your CSS files -->
    </head>
    
    <body>
      <!-- Add new user account form -->
      <div class="new-user-form-container">
        <h2>Add new user account</h2>
        <form class="new-user-form" action="/create-user" method="post">
          <div class="form-row">
            <label for="userId">Choose user ID:</label>
            <input type="text" id="userId" name="userId" placeholder="User ID">
          </div>
          <div class="form-row">
            <label for="userEmail">Choose user email:</label>
            <input type="email" id="userEmail" name="userEmail" placeholder="Email">
          </div>
          <div class="form-row">
            <label for="userPassword">Choose user password:</label>
            <input type="password" id="userPassword" name="userPassword" placeholder="Password">
          </div>
          <div class="form-row">
            <label for="userFirstName">Choose user first name:</label>
            <input type="text" id="userFirstName" name="userFirstName" placeholder="First Name">
          </div>
          <div class="form-actions">
            <button type="submit" class="btn btn-save">Save</button>
            <button type="button" class="btn btn-cancel">Cancel</button>
            
          </div>
        </form>
      </div>

      <!-- Link to your JavaScript files -->
    </body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="main.js"></script> <!-- Link to your JavaScript file -->
<script>
  $(document).ready(function () {
    // User input validation
    const validateInput = () => {
      const email = $('#userEmail').val();
      if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        alert('Invalid email');
        return false;
      }

      const password = $('#userPassword').val();
      if (password.length < 8) {
        alert('Password too short');
        return false;
      }

      return true;
    };

    // Handle form submission 
    const handleFormSubmit = async (e) => {
      e.preventDefault();

      // Validate input
      if (!validateInput()) {
        return;
      }

      // Get form data
      const userId = $('#userId').val().trim();
      const userEmail = $('#userEmail').val().trim();
      const userFirstName = $('#userFirstName').val().trim();
      const csrfToken = document.querySelector('input[name="_csrf"]').value; // Corrected way to get CSRF token

      // Create user object
      const userData = {
        userId,
        userEmail,
        userFirstName
      };

      // Submit form data to API
      try {
        const response = await fetch('/create-user', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'CSRF-Token': csrfToken // Include CSRF token in the header
          },
          body: JSON.stringify(userData)
        });

        // Redirect on success
        if (response.ok) {
          window.location.href = '/users';
        } else {
          const errorData = await response.json();
          alert(`Failed to submit form: ${errorData.message}`);
        }
      } catch (error) {
        console.error(error);
        alert('Unable to submit form');
      }
    };

    // Attach form submit handler
    $('.new-user-form').on('submit', handleFormSubmit);
  });
</script>

</body>

</html>